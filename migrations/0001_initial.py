# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
        ('sites', '0001_initial'),
        ('pages', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('hide_title', models.BooleanField(default=False, verbose_name='Hide Title')),
                ('slug', models.SlugField(max_length=128, verbose_name='Slug')),
                ('sub_title', models.CharField(max_length=256, null=True, verbose_name='Sub Title', blank=True)),
                ('text', models.TextField(null=True, verbose_name='Text', blank=True)),
                ('image', models.FileField(upload_to=b'block/image', null=True, verbose_name='Image', blank=True)),
                ('bg', models.FileField(upload_to=b'block/bg', null=True, verbose_name='Background', blank=True)),
                ('order', models.PositiveSmallIntegerField(default=500, verbose_name='Sort')),
                ('offices', models.BooleanField(default=False, verbose_name='Offices')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': 'Block',
                'verbose_name_plural': 'Blocks',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CountDown',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('to_datetime', models.DateTimeField(verbose_name='To Date Time')),
                ('icon', models.ImageField(upload_to=b'img/countdown', verbose_name='Icon', blank=True)),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'ordering': ['updated_at', 'name'],
                'verbose_name': 'Count Down',
                'verbose_name_plural': 'Count Downs',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('problem_title', models.CharField(max_length=256, verbose_name='Problem Title')),
                ('problem_description', models.TextField(null=True, verbose_name='Problem Description', blank=True)),
                ('problem_image', models.FileField(upload_to=b'faq/image', null=True, verbose_name='Problem Image', blank=True)),
                ('solutions_title', models.CharField(max_length=256, verbose_name='Solutions Title')),
                ('solutions_description', models.TextField(null=True, verbose_name='Solutions Description', blank=True)),
                ('solutions_image', models.FileField(upload_to=b'faq/image', null=True, verbose_name='Solutions Image', blank=True)),
                ('order', models.PositiveSmallIntegerField(default=500, verbose_name='Sort')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('block', models.ForeignKey(related_name='faqs', verbose_name='Block', to='lp.Block')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FormConfig',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('show_title', models.BooleanField(default=False, verbose_name='Show form title')),
                ('submit_name', models.CharField(max_length=128, verbose_name='Submit bottom name')),
                ('phone', models.BooleanField(default=True, verbose_name='Show phone field')),
                ('phone_placeholder', models.CharField(max_length=128, null=True, verbose_name='Phone placeholder', blank=True)),
                ('email', models.BooleanField(default=False, verbose_name='Show e-mail field')),
                ('email_placeholder', models.CharField(max_length=128, null=True, verbose_name='E-Mail placeholder', blank=True)),
                ('comment', models.BooleanField(default=False, verbose_name='Show comment field')),
                ('comment_placeholder', models.CharField(max_length=128, null=True, verbose_name='Comment placeholder', blank=True)),
                ('error_message', models.TextField(null=True, verbose_name='Error Message', blank=True)),
                ('tnx_message', models.TextField(null=True, verbose_name='Tnx Message', blank=True)),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'ordering': ['-created_at'],
                'verbose_name': 'Form Config',
                'verbose_name_plural': 'Forms Configs',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('description', models.TextField(null=True, verbose_name='Description', blank=True)),
                ('orgdata', models.TextField(null=True, verbose_name='Organization Data', blank=True)),
                ('phone', models.CharField(default=b'+7 (000) 000-00-00', max_length=64, null=True, verbose_name='Phone', blank=True)),
                ('email', models.CharField(default=b'email@mail.com', max_length=128, null=True, verbose_name='E-mail', blank=True)),
                ('skype', models.CharField(max_length=128, verbose_name='Skype', blank=True)),
                ('address', models.CharField(max_length=2048, verbose_name='Address', blank=True)),
                ('www', models.URLField(default=b'http://glav.it/', max_length=64, null=True, verbose_name='WWW', blank=True)),
                ('photo', models.ImageField(upload_to=b'img/office', verbose_name='Photo', blank=True)),
                ('latitude', models.DecimalField(null=True, verbose_name='Latitude', max_digits=19, decimal_places=15, blank=True)),
                ('longitude', models.DecimalField(null=True, verbose_name='Longitude', max_digits=19, decimal_places=15, blank=True)),
                ('center_latitude', models.DecimalField(null=True, verbose_name='Center Latitude', max_digits=19, decimal_places=15, blank=True)),
                ('center_longitude', models.DecimalField(null=True, verbose_name='Center Longitude', max_digits=19, decimal_places=15, blank=True)),
                ('zoom', models.PositiveSmallIntegerField(default=15, verbose_name='Zoom')),
                ('order', models.PositiveSmallIntegerField(default=500, verbose_name='Sort')),
                ('main', models.BooleanField(default=True, verbose_name='Main')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('sites', models.ManyToManyField(related_name='offices', verbose_name='Sites', to='sites.Site')),
            ],
            options={
                'ordering': ['order', 'name'],
                'verbose_name': 'Office',
                'verbose_name_plural': 'Offices',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('phone', models.CharField(max_length=32, null=True, verbose_name='Phone', blank=True)),
                ('email', models.EmailField(max_length=128, null=True, verbose_name='E-Mail', blank=True)),
                ('comment', models.TextField(null=True, verbose_name='Comment', blank=True)),
                ('ip', models.IPAddressField(verbose_name='IP', null=True, editable=False, blank=True)),
                ('referrer', models.CharField(verbose_name='Referrer', max_length=2048, null=True, editable=False, blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('config', models.ForeignKey(verbose_name='Form Config', blank=True, to='lp.FormConfig', null=True)),
                ('site', models.ForeignKey(verbose_name='Site', blank=True, to='sites.Site', null=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'verbose_name': 'Msg',
                'verbose_name_plural': 'Msgs',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SiteConfig',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('send_sms', models.BooleanField(default=True, verbose_name='Send SMS')),
                ('phone', models.CharField(max_length=32, verbose_name='Phone')),
                ('sms_name', models.CharField(help_text='From 2 to 11 Latin characters. As senders, we endorse only the names of sites, organizations or brands.', max_length=12, verbose_name='SMS Name')),
                ('send_email', models.BooleanField(default=True, verbose_name='Send E-Mail')),
                ('email', models.EmailField(max_length=128, verbose_name='E-Mail')),
                ('code_head', models.TextField(null=True, verbose_name='Head Code', blank=True)),
                ('code_footer', models.TextField(null=True, verbose_name='Footer Code', blank=True)),
                ('valute', models.CharField(max_length=3, verbose_name='Valute', choices=[(b'rub', '\u0420.'), (b'usd', '$'), (b'eur', '\u20ac')])),
                ('favicon', models.FileField(upload_to=b'conf/img', null=True, verbose_name='Favicon', blank=True)),
                ('logo', models.FileField(upload_to=b'conf/img', null=True, verbose_name='Logo', blank=True)),
                ('logo_small', models.FileField(upload_to=b'conf/img', null=True, verbose_name='Logo Small', blank=True)),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('form_config', models.ForeignKey(verbose_name='Pop-Up Form (CallBack)', blank=True, to='lp.FormConfig', null=True)),
                ('site', models.ForeignKey(related_name='config', verbose_name='Site', to='sites.Site')),
            ],
            options={
                'verbose_name': 'Site Config',
                'verbose_name_plural': 'Sites Config',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SubBlock',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('sub_title', models.CharField(max_length=256, null=True, verbose_name='Sub Title', blank=True)),
                ('description', models.TextField(null=True, verbose_name='Description', blank=True)),
                ('image', models.FileField(upload_to=b'subblock/image', null=True, verbose_name='Image', blank=True)),
                ('order', models.PositiveSmallIntegerField(default=500, verbose_name='Sort')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('block', models.ForeignKey(related_name='subblocks', verbose_name='Block', to='lp.Block')),
            ],
            options={
                'ordering': ['block', 'order'],
                'verbose_name': 'Sub Block',
                'verbose_name_plural': 'Sub Blocks',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('sub_title', models.CharField(max_length=256, verbose_name='Sub Title')),
                ('old_price', models.PositiveIntegerField(default=1000, null=True, verbose_name='Old Price', blank=True)),
                ('new_price', models.PositiveIntegerField(default=1000, null=True, verbose_name='New Price', blank=True)),
                ('price_from', models.BooleanField(default=False, verbose_name='Price From')),
                ('price_after', models.CharField(max_length=256, null=True, verbose_name='Price After', blank=True)),
                ('description', models.TextField(null=True, verbose_name='Description', blank=True)),
                ('options', models.TextField(null=True, verbose_name='Options', blank=True)),
                ('image', models.FileField(upload_to=b'tariff/image', null=True, verbose_name='Image', blank=True)),
                ('order_url', models.URLField(max_length=256, null=True, verbose_name='Order URL', blank=True)),
                ('order', models.PositiveSmallIntegerField(default=500, verbose_name='Sort')),
                ('vip', models.BooleanField(default=True, verbose_name='VIP')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': 'Tariff',
                'verbose_name_plural': 'Tariffs',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TariffAddition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('description', models.TextField(null=True, verbose_name='Description', blank=True)),
                ('price', models.PositiveIntegerField(default=1000, null=True, verbose_name='Price', blank=True)),
                ('price_from', models.BooleanField(default=False, verbose_name='Price From')),
                ('price_after', models.CharField(max_length=256, null=True, verbose_name='Price After', blank=True)),
                ('selected', models.BooleanField(default=True, verbose_name='Selected')),
                ('order', models.PositiveSmallIntegerField(default=500, verbose_name='Sort')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': 'Tariff Addition',
                'verbose_name_plural': 'Tariffs Additions',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TariffOrder',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(help_text='Gleb', max_length=128, verbose_name='Name')),
                ('phone', models.CharField(help_text='+7 (965) 222-03-30', max_length=32, verbose_name='Phone')),
                ('email', models.EmailField(help_text='gleb@gmail.com', max_length=128, verbose_name='E-Mail')),
                ('ip', models.IPAddressField(verbose_name='IP', null=True, editable=False, blank=True)),
                ('referrer', models.CharField(verbose_name='Referrer', max_length=2048, null=True, editable=False, blank=True)),
                ('total_price', models.PositiveIntegerField(null=True, verbose_name='Total Price', blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('additions', models.ManyToManyField(to='lp.TariffAddition', null=True, verbose_name='Additions', blank=True)),
                ('site', models.ForeignKey(verbose_name='Site', blank=True, to='sites.Site', null=True)),
                ('tariff', models.ForeignKey(verbose_name='Tariff', to='lp.Tariff', null=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'verbose_name': 'Tariff Order',
                'verbose_name_plural': 'Tariff Orders',
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='tariff',
            name='additions',
            field=models.ManyToManyField(related_name='tariff', null=True, verbose_name='Additions', to='lp.TariffAddition', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='tariff',
            name='block',
            field=models.ForeignKey(related_name='tariffs', verbose_name='Block', to='lp.Block'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='block',
            name='form_config',
            field=models.ForeignKey(verbose_name='Form Config', blank=True, to='lp.FormConfig', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='block',
            name='pages',
            field=models.ManyToManyField(related_name='blocks', null=True, verbose_name='Sites', to='pages.Page', blank=True),
            preserve_default=True,
        ),
    ]
